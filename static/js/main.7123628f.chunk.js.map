{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAeeA,EAZF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GACtB,OACI,sBAAKC,UAAU,uDAAf,UACI,qBAAKC,IAAG,+BAA2BF,GAAMG,IAAI,aAC7C,gCACI,6BAAKL,IACL,4BAAIC,WCcLK,EAnBE,SAAC,GAAc,IAAZC,EAAW,EAAXA,OAChB,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAKC,GACb,OACI,cAAC,EAAD,CAEIR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCElBC,EAXC,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aACd,OACI,uBAAOT,UAAU,mCACbU,KAAK,QACLC,YAAY,eACZC,SAAUH,KCGPI,EARF,SAACC,GACV,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAO,kBAAmBC,OAAQ,SAApE,SACKJ,EAAMK,YCiBJC,E,kDAnBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAM,CACPC,UAAS,GAHC,E,qDAOlB,SAAkBC,EAAMC,GACpBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WACI,OAAGG,KAAKJ,MAAMC,SACH,oEAEJG,KAAKX,MAAMK,a,GAhBEQ,aCoEbC,G,wDA7DX,aAAc,IAAD,8BACT,gBAeJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAfzC,EAAKZ,MAAM,CACPjB,OAAQ,GACR2B,YAAa,IAJR,E,qDAUb,WAAoB,IAAD,OACfG,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAACtB,OAAOkC,S,oBAO7C,WAAS,IAAD,EACwBb,KAAKJ,MAA1BjB,EADH,EACGA,OAAQ2B,EADX,EACWA,YACTQ,EAAiBnC,EAAOoC,QAAO,SAAAC,GACjC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASZ,EAAYW,kBAEzD,OAAQtC,EAAOwC,OAGX,sBAAK5C,UAAU,KAAf,UACQ,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAFtC,IAGQ,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUzB,OAAQmC,WAPtC,6C,GA3BUZ,cCIHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACO,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEhBC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7123628f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Card = ({name,email,id}) => {\r\n    return (      \r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 ' >\r\n            <img src ={`https://robohash.org/${id}`} alt='my photo'/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p> \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card'\r\n\r\n\r\nconst CardList = ({ robots })=>{\r\n    return(\r\n        <div>\r\n            {\r\n                robots.map((user,i)=>{\r\n                    return (\r\n                        <Card \r\n                            key={i} \r\n                            id={robots[i].id} \r\n                            name={robots[i].name} \r\n                            email={robots[i].email}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox=({searchChange})=>{\r\n    return(\r\n        <input className='pa3 ba b--green bg-lightest-blue'\r\n            type='seach' \r\n            placeholder='Search Robot'\r\n            onChange={searchChange}\r\n            \r\n        />\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react' ;\r\n\r\nconst Scroll=(props)=>{\r\n    return(\r\n        <div style={{overflowY: 'scroll', border:'1px solid black', height: '600px'}} >\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React,{Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            hasError:false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error,info){\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Ooopppssss. Not good, check it out</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\n// import {robots} from './robots';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll'\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport './App.css';\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n// props\r\n// state\r\n// childer\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response=> response.json())\r\n            .then(users => this.setState({robots:users}));\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value})\r\n    }\r\n\r\n    render(){\r\n        const {robots, searchfield}=this.state;\r\n        const filteredRobots = robots.filter(robot=>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase()); \r\n        })\r\n        return !robots.length ?\r\n        <h1>Loading</h1> : \r\n        (\r\n            <div className='tc' >\r\n                    <h1 className='f1' >RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange} /> {/*\"this\" is the App */}\r\n                    <Scroll>\r\n                        <ErrorBoundary>\r\n                            <CardList robots={filteredRobots}/>\r\n                        </ErrorBoundary>\r\n                        \r\n                    </Scroll>\r\n                </div>\r\n        )\r\n        \r\n        // The upper code is cleaner with (condition)? (A):(B)\r\n        \r\n        // if(!robots.length){\r\n        //     return <h1>Loading</h1>\r\n        // }\r\n        // else{\r\n        //     return(\r\n        //         <div className='tc' >\r\n        //             <h1 className='f1' >RoboFriends</h1>\r\n        //             <SearchBox searchChange={this.onSearchChange} /> {/*\"this\" is the App */}\r\n        //             <Scroll>\r\n        //                 <CardList robots={filteredRobots}/>\r\n        //             </Scroll>\r\n        //         </div>\r\n                \r\n        //     );\r\n        // }\r\n        \r\n    }  \r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n                <React.StrictMode>\n                  <App />\n                </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}